version: '3.7'
services:
  postgres:
    image: postgres:11.9
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5432:5432
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    networks:
      - elastic-network
  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.2
    ports:
      - 9300:9300
      - 9200:9200
    environment:
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-methods=OPTIONS,HEAD,GET,POST,PUT,DELETE
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - transport.host=127.0.0.1
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_volume:/usr/share/elasticsearch/data
    networks:
      - elastic-network
  logstash:
    image: logstash/1.0
#        build:
#          dockerfile: ${PWD}/Dockerfile
#          context: ${PWD}/
    environment:
      - LOGSTASH_JDBC_URL=jdbc:postgresql://postgres:5432/postgres
      - LOGSTASH_JDBC_DRIVER=org.postgresql.Driver
      - LOGSTASH_JDBC_DRIVER_JAR_LOCATION=/usr/share/logstash/logstash-core/lib/jars/postgresql.jar
      - LOGSTASH_JDBC_USERNAME=postgres
      - LOGSTASH_JDBC_PASSWORD=password
      - LOGSTASH_ELASTICSEARCH_HOST=http://elastic-search:9200
      - xpack.monitoring.enabled=true
    volumes:
      - ./postgres-jdbc-input.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - 9600:9600
      - 5044:5044
    networks:
      - elastic-network
    depends_on:
      - postgres
      - elastic-search
volumes:
  elasticsearch_volume:
  postgres_volume:
networks:
  elastic-network: